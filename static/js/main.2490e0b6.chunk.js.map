{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","dangerouslySetInnerHTML","__html","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","styles","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","covid","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2490e0b6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\n import cx from 'classnames';\r\n import styles from \"./Cards.modules.css\";\r\nimport CountUp from \"react-countup\";\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className=\"container\" >\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card}  xs={12} md={3} className=\"card infected\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                seperator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()} </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3}  className=\"card recovered\" >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\"><CountUp\r\n            start={0}\r\n            end={recovered.value}\r\n            duration={2.5}\r\n            seperator=\",\"\r\n          /></Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of cases recovered from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3}  className=\"card deaths\" >\r\n\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\"><CountUp\r\n            start={0}\r\n            end={deaths.value}\r\n            duration={2.5}\r\n            seperator=\",\"\r\n          /></Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      <style dangerouslySetInnerHTML={{__html: `\r\n      .container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin: 50px 0;\r\n      }\r\n      \r\n      .card {\r\n        margin: 2% 2% !important;\r\n      }\r\n      \r\n      .infected {\r\n        border-bottom: 10px solid rgba(0, 0, 255, 0.5);\r\n      }\r\n      \r\n      .recovered{\r\n        border-bottom: 10px solid rgba(0, 255, 0, 0.5);\r\n      }\r\n      \r\n      .deaths{\r\n        border-bottom: 10px solid rgba(255, 0, 0, 0.5);\r\n      }\r\n    `}} />\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData= async(country) =>{\r\nlet changeableUrl =url;\r\nif(country)\r\n{\r\n    changeableUrl=`${url}/countries/${country}`;\r\n}\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n      \r\n    }\r\n    catch(error)\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n       const modifiedData = data.map((dailyData)=>({\r\n           confirmed : dailyData.confirmed.total,\r\n           deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n       }));\r\n       return modifiedData;\r\n    }\r\n    catch (error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries =async () =>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) =>country.name);\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React ,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from'../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\nconst Chart =({data:{confirmed,recovered,deaths},country}) =>{\r\n    const [dailyData , setDailyData]=useState({});\r\n    useEffect(()=>{\r\n        const fetchAPI =async () =>{\r\n            setDailyData (await fetchDailyData());   \r\n        }\r\n        // console.log(dailyData);\r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart =(\r\n        dailyData.length?\r\n        (<Line\r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data: dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true,\r\n            },\r\n            {\r\n                data: dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n            }\r\n        ],\r\n         }}\r\n        />): null\r\n    );\r\n    const barChart=(\r\n           confirmed\r\n            ?(\r\n                <Bar\r\n                data={{\r\n                    labels:['Infected','Recovered','Deaths'],\r\n                    datasets:[{\r\n                        label:'People',\r\n                        backgroundColor:[\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)'\r\n                        ],\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n                    }]\r\n                }}  \r\n                options={{\r\n                    legend:{display:false},\r\n                    title:{display:true,text:`Current state in ${country}`}\r\n                }}    \r\n                />\r\n            ):null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n        {country?barChart:lineChart};\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React,{useState,useEffect} from 'react'\r\nimport {NativeSelect,FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api'\r\nconst CountryPicker =({handleCountryChange}) =>{\r\n    const [fetchedCountries,setFetchedCountries]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI =async() =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    return(\r\n       <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n             <option value=\"\">Global</option>\r\n             {fetchedCountries.map((country,i)=><option key={i}>{country}</option>)}\r\n        </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react';\nimport styles from './App.module.css'\nimport {Cards,Chart,CountryPicker } from './components'\nimport {fetchData} from './api'\nimport covid from './images/covid.png' \nclass App extends React.Component{\n\nstate ={\n  data : {},\n  country:'',\n}\n  async componentDidMount (){\n    const fetchedData = await fetchData();\n   this.setState({data:fetchedData});\n  }\n\n  handleCountryChange = async (country) =>{\n    const fetchedData = await fetchData(country);\n    this.setState({data:fetchedData,country:country});\n    console.log(fetchedData);\n  }\n  render(){\n\n    const {data,country} =this.state;\n    return (\n      <div className = {styles.container}>\n      <img className={styles.image} src={covid} alt=\"Covid-19\"/>\n       <Cards data={data}/>\n       <CountryPicker handleCountryChange={this.handleCountryChange}/>\n       <Chart data={data} country={country}/>\n      </div>\n    )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__x_GhY\",\"image\":\"App_image__30Owf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__11oMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1zUL3\"};","module.exports = __webpack_public_path__ + \"static/media/covid.f3e6fbe5.png\";"],"sourceRoot":""}